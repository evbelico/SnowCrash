On arrival we get a binary which, when launched, outputs :
`./level13` => "UID 2013 started us but we we expect 4242"

If we try to change the uid of level13 (with `usermod -u`, for example) we get an error : "usermod: user level13 is currently logged in"
From level12, another error : "usermod: cannot lock /etc/passwd; try again later."

Ok then, let's examine the binary with gdb :
`gdb level13`
`disass main`

Output :
0x0804858c <+0>:	push   %ebp
   0x0804858d <+1>:	mov    %esp,%ebp
   0x0804858f <+3>:	and    $0xfffffff0,%esp
   0x08048592 <+6>:	sub    $0x10,%esp
   0x08048595 <+9>:	call   0x8048380 <getuid@plt>
   0x0804859a <+14>:	cmp    $0x1092,%eax
   0x0804859f <+19>:	je     0x80485cb <main+63>
   0x080485a1 <+21>:	call   0x8048380 <getuid@plt>
   0x080485a6 <+26>:	mov    $0x80486c8,%edx
   0x080485ab <+31>:	movl   $0x1092,0x8(%esp)
   0x080485b3 <+39>:	mov    %eax,0x4(%esp)
   0x080485b7 <+43>:	mov    %edx,(%esp)
   0x080485ba <+46>:	call   0x8048360 <printf@plt>
   0x080485bf <+51>:	movl   $0x1,(%esp)
   0x080485c6 <+58>:	call   0x80483a0 <exit@plt>
   0x080485cb <+63>:	movl   $0x80486ef,(%esp)
   0x080485d2 <+70>:	call   0x8048474 <ft_des>
   0x080485d7 <+75>:	mov    $0x8048709,%edx
   0x080485dc <+80>:	mov    %eax,0x4(%esp)
   0x080485e0 <+84>:	mov    %edx,(%esp)
   0x080485e3 <+87>:	call   0x8048360 <printf@plt>
   0x080485e8 <+92>:	leave

We can see the program calls the `getuid()` function twice :
	0x08048595 <+9>:	call   0x8048380 <getuid@plt>
[...]
   0x080485a1 <+21>:	call   0x8048380 <getuid@plt>

In fact, the program calls `getuid()` once [`call`], then compares the two values [`cmp`], then verifies if it's equal with the `main()` function [`je`], then calls `getuid()` once more.
We'll try to pretend our user id is 4242, by tweaking the program inside gdb.

First, let's put a breakpoint on the first call to `getuid()` : `b getuid`
=> "Breakpoint 1 at 0x8048380"
Run the program and step : `run`, `step`
Now, let's try to access the value inside the %eax registry, before exiting the `getuid()` function :
`print $eax` => "$2 = 2013"
This is level13's user id. Let's change it like so : `set $eax=4242`
Just `step` once more :

	(gdb) set $eax=4242
	(gdb) step
	Single stepping until exit from function main,
	which has no line number information.
	your token is 2A31L79asukciNyi8uppkEuSx
	0xb7e454d3 in __libc_start_main () from /lib/i386-linux-gnu/libc.so.6

Retrieve the flag.
